{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/pages/Error.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/RenderRoutes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","MessageStyle","Avatar","textavatar","avatar","Text","textname","name","textmessege","message","texttime","time","AvatarStyle","src","TextStyle","NameStyle","LineStyle","TimeStyle","styled","div","img","messageData","HW1","SuperButton","red","className","restProps","finalClassName","s","default","Affair","priorityClass","affair","priority","high","middle","low","rows","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","superButton","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","item","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","newValue","PreJunior","Error404","number","smile","Junior","JuniorPlus","PATH","RenderRoutes","path","element","Header","nav","isActive","itemA","itemN","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.10287969.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1HVzc\",\"rows\":\"Affairs_rows__2Ldd9\",\"high\":\"Affairs_high__17LNk\",\"middle\":\"Affairs_middle__eFolA\",\"low\":\"Affairs_low__1Fi0s\",\"button\":\"Affairs_button__1BWte\",\"superButton\":\"Affairs_superButton__30ofc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2d_f2\",\"itemN\":\"Header_itemN__1jcOa\",\"itemA\":\"Header_itemA__3D-B4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__27pi_\",\"errorInput\":\"SuperInputText_errorInput__3FcDc\",\"error\":\"SuperInputText_error__3-x1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__GZlw9\",\"number\":\"Error_number__2VJEP\",\"text\":\"Error_text__3bey8\",\"smile\":\"Error_smile__30SyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Te0F\",\"red\":\"SuperButton_red__38pff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3bY38\",\"error\":\"Greeting_error__2qGGF\",\"errorMessage\":\"Greeting_errorMessage__3xlCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1ioMV\",\"column\":\"HW4_column__3Mopg\",\"testSpanError\":\"HW4_testSpanError__3oA96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1dDaS\",\"spanClassName\":\"SuperCheckbox_spanClassName__10JD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__hSf1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1q0SY\"};","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <MessageStyle>\r\n            <Avatar textavatar={props.avatar}/>\r\n            <Text\r\n                textname={props.name}\r\n                textmessege={props.message}\r\n                texttime={props.time}\r\n            />\r\n        </MessageStyle>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Message\r\n// прокинуть пропс через дочернюю функцию!!!!\r\ntype AvatarPropsType = {\r\n    textavatar: string\r\n}\r\n\r\nfunction Avatar(props: AvatarPropsType) {\r\n    return (\r\n        <AvatarStyle src={props.textavatar}></AvatarStyle>\r\n    )\r\n}\r\n\r\ntype TextTypeProps = {\r\n    textname: string\r\n    textmessege: string\r\n    texttime: string\r\n}\r\n\r\nfunction Text(props: TextTypeProps) {\r\n    return (\r\n        <TextStyle>\r\n            <NameStyle>\r\n                {props.textname}\r\n            </NameStyle>\r\n            <LineStyle>\r\n                {props.textmessege}\r\n            </LineStyle>\r\n            <TimeStyle>\r\n                {props.texttime}\r\n            </TimeStyle>\r\n        </TextStyle>\r\n    )\r\n\r\n}\r\n\r\nconst MessageStyle=styled.div`\r\n  background-color: aqua;\r\n  width: 400px;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n  margin: 10px;\r\n`\r\nconst TextStyle=styled.div`\r\n  background-color: green;\r\n  height: 65px;\r\n  margin: 10px;\r\n  border-radius: 10px;\r\n`\r\nconst NameStyle=styled.div`\r\n    font-weight: bold;\r\n    margin-left: 10px;\r\n    color: red;\r\n`\r\n\r\nconst LineStyle=styled.div`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst TimeStyle=styled.div`\r\n    margin-right: 10px;\r\n    margin-left: 250px;\r\n`\r\n\r\nconst AvatarStyle=styled.img`\r\n  width: 50px;\r\n  border-radius: 30px;\r\n  margin-top: 20px;\r\n`\r\n//text компоненту вынести в отдельный файл и разбить по гриду!","import React from 'react'\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\r\n    const priorityClass = props.affair.priority === 'high' ? s.high : props.affair.priority === 'middle' ? s.middle : props.affair.priority === 'low' ? s.low:''\r\n\r\n    return (\r\n        <div className={s.rows}>\r\n            <p>{props.affair.name}</p>  <p className={priorityClass}>{props.affair.priority}</p>\r\n            {/*<button onClick={deleteCallback}>X</button>*/}\r\n            <SuperButton className={s.button} red onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // fix\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all') // fix\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            {/*<button onClick={setAll}>All</button>*/}\r\n            {/*<button onClick={setHigh}>High</button>*/}\r\n            {/*<button onClick={setMiddle}>Middle</button>*/}\r\n            {/*<button onClick={setLow}>Low</button>*/}\r\n\r\n            <SuperButton className={s.superButton} onClick={setAll}>All</SuperButton>\r\n            <SuperButton className={s.superButton} onClick={setHigh}>High</SuperButton>\r\n            <SuperButton className={s.superButton} onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton className={s.superButton} onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {SetStateAction, useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\n// export type AffairPriorityType = 'all'|'low' | 'middle' | 'high' // fix\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n} // fix\r\nexport type FilterType = 'all' | 'low' | 'middle' | 'high'\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ //  fix\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):Array<AffairType> => { //fix\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else return affairs.filter(item => item.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number):Array<AffairType> => { // fix\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // fix\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // fix\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.superInput}` //fix\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\r\n\r\ntype GreetingPropsType = {\r\n    name: string //fix\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void //fix\r\n    addUser: () => void //fix\r\n    error: boolean //fix\r\n    totalUsers: number // fix\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : '' // fix\r\n\r\n    return (\r\n        <div>\r\n            {/*<input value={name} onChange={setNameCallback} className={inputClass}/>*/}\r\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\r\n            {error && <span className={s.errorMessage}>Are you stupid?</span>}\r\n            {/*<button onClick={addUser}>add</button>*/}\r\n            <SuperButton onClick={addUser}>Add</SuperButton>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> //fix\r\n    addUserCallback: (name:string)=>void //fix\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') //fix\r\n    const [error, setError] = useState<boolean>(false) // fix\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { //fix\r\n        setName(e.currentTarget.value)\r\n        setError(false)//fix\r\n    }\r\n    const addUser = () => {\r\n        if(name.trim()!==''){\r\n            addUserCallback(name)\r\n            setName('')\r\n            setError(false)\r\n            alert('Hello '+name+'!') //fix\r\n\r\n        } else{\r\n            setName('')\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length //fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string //fix\r\n    name: string //fix\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { //fix\r\n        let newUser:UserType={\r\n            _id:v1(),\r\n            name:name\r\n        }\r\n        setUsers([...users, newUser]) // fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n         setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n         setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        &#10002;{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let newValue=restoreState('editable-span-value','')\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : ' enter text...'}}\r\n                    />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6';\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport s from './Error.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.number}>404</div>\r\n            <div className={s.text}>Page not found!</div>\r\n            <div className={s.smile}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            HomeTask For Junior Level\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            HomeTask For JuniorPlus Level\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\r\nimport { Route, Routes} from 'react-router-dom';\r\nimport PreJunior from './pages/PreJunior';\r\nimport Error404 from './pages/Error404';\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from './pages/JuniorPlus';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n    // add paths\r\n}\r\n\r\nfunction RenderRoutes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Routes>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} element={<PreJunior/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path={'*'} element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenderRoutes\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from './RenderRoutes';\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.nav}>\r\n            <NavLink className={({isActive}) => isActive ? s.itemA : s.itemN} to={PATH.PRE_JUNIOR}>Pre-Junior</NavLink>\r\n            <NavLink className={({isActive}) => isActive ? s.itemA : s.itemN} to={PATH.JUNIOR}>Junior</NavLink>\r\n            <NavLink className={({isActive}) => isActive ? s.itemA : s.itemN} to={PATH.JUNIOR_PLUS}>Junior-Plus</NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport RenderRoutes from './RenderRoutes'\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <RenderRoutes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}